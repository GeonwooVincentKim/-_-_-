I. 응용 SW 기초 기술 활용

1. 운영체제
- 1. 컴퓨터의 시스템 자원들을 효율적으로 관리하며, 보다 편리하고 효율적으로 사용할 수 있도록 환경을 제공하는 여러 프로그램의 모임
- 2. 처리 능력, 반환 시간, 사용 가능도, 신뢰성
- 3. 프로세서 (기억장치), 입출력 장치, 파일 및 정보, 기억장치(주,보조 기억 장치 모두) 지원


2. 데이터베이스
- 1. DB
  = 1. 공동으로 사용될 데이터를 중복을 배제하고 통합하고, 저장장치 저장하여 항상 사용할 수 있도록 운영하는 운영 데이터
  = 2. 통합된 데이터, 저장된 데이터, 운영 데이터, 공용 데이터

- 2. DBMS
  = 1. 사용자의 요구에 따라 데이터를 생성해주고, DB 를 관리해주는 S/W
  = 2. 정의, 조작, 제어(무결성, 검사)

- 3. 독립성 = 논리적 독립성 & 물리적 독립성
- 4. 스키마
  = 1. DB 구조와 제약 조건에 관한 전반적인 명세를 기술한 것
  = 2. 외부 (논리적 구조 정의)
  = 3. 개념 (DB 전체적인 논리적 구조)
  = 4. 내부 (물리적 저장 장치)


3. DB 설계
- 1. 고려 사항
  = 무결성, 일관성, 회복, 보안, 효율성, DB 확장

- 2. DB 설계 순서
  = 요구 조건 분석, 개념적 설계, 논리적 설계, 물리적 설계, 구현

- 3. 요구 조건 분석
  = DB 를 사용할 사람들로부터 필요한 용도 파악

- 4. 개념적 설계 & 논리적 설계 & 물리적 설계
  = 1. 개념적 설계 - 현실 세계에 대한 추상적 개념을 표현하는 과정
  = 2. 논리적 설계 - 현실 세계에서 발생하는 자료를 특정 DBMS 가 지원하는 논리적 자료 구조로 변환 (Mapping) 하는 과정
  = 3. 물리적 설계 - 논리적 구조로 표현한 데이터를 물리적 구조의 데이터로 변환하는 과정, (파일 구조, 접근 경로, 조회 집중 Record)

- 5. DB 구현
  = 논리적 설계와 물리적 설계에서 도출된 DB 스키마를 파일로 구현하는 과정


4. ER (개체-관계) 모델
- 1. 현실 세계의 무질서한 데이터를 개념적인 논리 데이터로 표현하기 위한 방법
- 2. 개념, 관계, 속성


5. 관계형 DB 구조
- 1. 관계형 DB
  = 2차원적인 표를 이용해서 데이터 상호 관계를 정의하는 DB

- 2. Tuple
  = 1. Relation 을 구성하는 각각의 행
  = 2. Tuple 수 = 카디널리티 = 기수 = 대응 수

- 3. Attribute
  = 1. DB 를 구성하는 가장 작은 데이터 단위
  = 2. Attribute 수 = Degree (디그리) = 차수

- 4. Relation
  = 1. 전체 Table 의미, 데이터들을 표(Table) 형태로 표현한 것
  = 2. 순서 없음 (상관 없음)

- 5. Domain
  = 하나의 Attribute 가 취할 수 있는 같은 타입의 원자 (Atomic) 값들의 집합  

- 6. 관계형 데이터 모델
  = 2차원적인 표를 이용해서 데이터 상호 관계를 정의하는 DB 구조


6. 트랜잭션 (Transaction) & CRUD 분석
- 1. 트랜잭션 - 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 모두 수행되어야할 일련의 연산
- 2. Atomic (원자성), Consistency (일관성), Isolation (독립성), Durability (영속성)
  = 1. Atomic -> Transaction 연산 DB 에 모두 반영 (Commit) or 전혀 반영되지 않아야 함 (Rollback)
  = 2. Consistency -> Transaction 이 그 실행을 성공적으로 완료, 언제나 일관성 있는 DB 상태로 변환
  = 3. Isolation -> 둘 이상 Transaction 동시 병행 실행, 어느 하나의 Transaction 실행 중, 다른 Transaction 연산에 끼어들기 금지
  = 4. Durability -> 시스템 고장날 경우라도 영구적으로 성공된 Transaction 결과 반영

- 3. CRUD 분석 - Process 와 Table 간에 CRUD Matrix 를 만들어서 Transaction 을 분석하는 것
- 4. Transaction 분석 - DB 용량 산정 및 구조의 최적화 목적


7. Internet
- 1. Internet => 전세계 수 많은 컴퓨터와 Network 들이 연결된 광범위한 컴퓨터 통신망
- 2. IP 주소 => 인터넷에 연결된 모든 컴퓨터 자원을 구분하기 위한 고유한 주소
  = 1. 8비트 * 4부분 = 32비트
  = 2. A (0 ~ 127), B (128 ~ 191), C (192 ~ 223), D (224 ~ 239), E (실험적 주소)

- 3. Subnetting => 네트워크 주소를 다시 여러 개의 작은 네트워크로 나누어 사용하는 것
- 4. IPv6 (Internet Protocal Version 6) => IPv4 기능 확장
  = 1. 16비트 * 8부분 = 128비트
  = 2. 유니캐스트(1:1), 멀티캐스트(1:N), 애니캐스트(1:1, 가장 가까운 사람)
  = 3. 인증성, 기밀성, 데이터 무결성 지원, 보안 문제 해결

- 5. 도메인 네임
  = 1. 숫자로 된 IP 주소를 문자 형태로 표현
  = 2. 문자로 된 도메임 네임, IP 주소로 변환 => DNS


8. OSI 참조 모델
- 1. OSI (Open System Interconnection) 참조 모델 - ISO (국제표준화기구) 에서 제안한 통신 규약 (Protocol)
- 2. 물리계층 - 기계, 전기, 기능적, 절차적 특성 규칙
- 3. 데이터 링크 계층 - 신뢰성 있고 효율적인 정보전송, 흐름제어 기능
- 4. 네트워크 계층 - 데이터 교환 및 중계 기능, 경로 설정 (Routing)
- 5. 전송 계층 - 논리적 안정, 균일한 데이터 전송 서비스 제공, 종단 시스템 (End-to-End), 다중화, 오류제어, 흐름제어
- 6. 세션 계층 - 송수신 측 관련성 유지, 대화 제어
- 7. 표현 계층 - 데이터 암호화, 코드 변환, 데이터 압축, 구문 검색 및 정보 형식 (포맷) 변환
- 8. 응용 계층 - 사용자의 OSI 환경 접근, 서비스 제공, 정보 교환, 파일 전송, 전자 사서함, 가상 터미널


9. 네트워크 관련 장비
- 1. 네트워크 인터페이스 카드 (NIC, Network Interface Card)
  = 컴퓨터 & 컴퓨터, 컴퓨터 & 네트워크 연결하는 장비, 케이블을 통한 정보 전송

- 2. 허브 (Hub)
  = 1. 회선 통합 관리, 가까운 컴퓨터들을 연결, 리피터 역할
  = 2. 더미 허브 (단순 연결), 스위칭 허브 (지능형 허브, 흐름 제어)

- 3. 리피터 (Repeater) 
  = 1. 수신한 신호를 증폭시키거나 출력 전압을 높여 전송하는 장치, 물리 계층
  = 2. 디지털 회선 중간에 위치

- 4. 브리지 (Bridge)
  = 1. LAN 과 LAN 연결하거나, LAN 안에서의 컴퓨터 그룹을 연결하는 장치
  = 2. 트래픽 병목 현상 해결, 서브넷 구성 시, n(n - 1)/2 개 (n = Bridge 개수)
  = 3. 보안성

- 5. 스위치 (Switch)
  = 1. LAN과 LAN을 연결하여 훨씬 더 큰 LAN을 만드는 장치, 데이터 링크 계층, 
  = 2. 전송 속도 빠름 (하드웨어 기반), 서로 다른 전송 속도 지원하게 제어 가능

- 6. 라우터 -> 데이터 전송의 최적 경로 선택, 네트워크 계층, 프로토콜 변환 기능 수행
- 7. 게이트웨이 -> 프로토콜 구조가 다른 네트워크를 연결하는 장치, 세션 & 표현 & 응용 계층


10. TCP / IP
- 1. 프로토콜
  = 1. 데이터 교환을 원할하게 수행할 수 있도록 표준화시켜 놓은 통신 규약
  = 2. 구문 (데이터 형식, 부호화, 신호 레벨), 의미 (협조사항, 제어 정보), 시간 (통신 속도, 메시지 순서 제어)

- 2. TCP / IP
  = 1. 서로 다른 기종의 컴퓨터들이 데이터를 주고받을 수 있도록 하는 표준 Protocal
  = 2. TCP -> 전송 계층, 연결형 서비스, 패킷 다중화, 순서 & 오류 & 흐름 제어
  = 3. IP -> 네트워크 계층, 비연결형 서비스, 패킷 분해 / 조립, 주소 지정, 경로 선택

- 3. TCP / IP 구조
  = 1. 응용 (응용, 표현, 세션) -> 응용 프로그램 간 데이터 송수신, TELNET, FTP, SMTP
  = 2. 전송 (전송) -> 신뢰성 있는 통신 제공, TCP, UDP, RTCP
  = 3. 인터넷 (네트워크) -> 주소 지정, 경로 설정, IP, ICMP, IGMP, ARP, RARP
  = 4. 네트워크 (데이터 링크, 물리) -> 실제 데이터 (프레임) 송수신, Ethernet, ARQ, IEEE 802

- 4. 전송 계층의 주요 프로토콜
  = 1. TCP (Transmission Control Protocol)
    -> 1. 양방향 연결 (Full Duplex Connection)
    -> 2. 가상 회선 연결 (Virtual Circuit Conneciton)
    -> 3. 스트림 위주 전달 (Packit 단위) & 순서, 오류, 흐름 제어

  = 2. UDP (User Diagram Protocol)
    -> 1. 비연결형 서비스 (데이터 전송 전, 연결 설정 X)
    -> 2. 단순한 헤더 구조 & 실시간 전송

  = 3. RTCP (Real-Time Control Protocol) 
    -> 1. RTP (Real-Time Transport Control) 패킷 전송 품질 제어, 제어 프로토콜
    -> 2. 32비트 경계

- 5. 인터넷 계층의 주요 프로토콜
  = 1. IP -> 데이터 그램
  = 2. ICMP -> 오류 처리 & 전송 경로 변경, Header = 8 Byte
  = 3. IGMP -> 멀티 캐스트
  = 4. ARP -> IP 주소 => 물리적 주소 (MAC Address)
  = 5. RARP -> 물리적 주소 => IP 주소

- 6. 네트워크 계층의 주요 프로토콜
  = Ethernet, IEEE 802, HDLC, X.25, RS-232C


11. 스위치 (Switch)
- 1. 스위치 (Switch 분류)
  = 1. LAN 과 LAN 을 연결하여 훨씬 더 큰 LAN 을 만드는 장치
  = 2. L2 (MAC 주소 기반 프레임 전송), L3 (L2에 라우터 추가), L4 (로드밸런서, TCP / IP), L7 (IP 주소, TCP / UDP)

- 2. 스위칭 (Swtich) 방식
  = Store and Forwarding (데이터 모두 받고, 스위칭), Cut-Through (데이터 목적지 주소), Fragment Free (앞에 두 개 장점 결합)

- 3. 백본 스위치 (Backbone Switch)
  = 네트워크 연결 시 중추적 역할 하는 네트워크, L3 스위치

- 4. Hierarchical 3 Layer Model
  = 1. 액세스 (L2, 최초로 연결되는 지점)
  = 2. 디스트리뷰션 (L3, LAN간 라우터 기능, 액세스 계층 통신 집약, 코어 계층으로 전송)
  = 3. 코어 (백본, 전자 우편, 인터넷 접속, 화상 회의)


12. 경로 제어 (Routing)
- 1. 경로 제어 (Routing)
  = 1. 전송 경로 중에서 최적 패킷 교환 경로 설정하는 기능
  = 2. 성능 기준, 경로의 설정 시간과 장소, 정보 발생지, 경로 정보의 갱신 시간

- 2. 경로 제어 프로토콜 (Routing Protocol)
  = 1. IGP -> 하나의 자율 시스템
    -> 1. RIP (Bellman-Ford 알고리즘, 최대 홉)
    -> 2. OSRF (Dijkstra[다익스트라] 알고리즘)

  = 2. EGP -> 자율 시스템 (AS) 간의 라우팅, 게이트웨이 간 라우팅
  = 3. BGP -> 변화된 정보만 교환, 한 번에 하나씩

- 3. 트래픽 제어 (Traffic Control)
  = 1. 전송되는 패킷의 흐름 또는 그 양을 조절하는 기능
  = 2. 흐름 제어, 폭주 (혼합 제어), 교착 상태 방지

- 4. 흐름 제어
  = 1. 송수신 측 사이에 전송되는 패킷의 양이나 속도를 규제하는 기능
  = 2. 정지-대기 (Stop and wait) => ACK, 한 번에 하나의 패킷
  = 3. 슬라이딩 윈도우 (Sliding Window) => 확인 신호, Window 크기

- 5. 폭주 제어
  = 1. 네트워크 내의 패킷 수를 조절하여 네트워크 오버플로 방지
  = 2. 느린 시작 (Slow Start) => 2배씩 지수적 증가 (1, 2, 4, 8), 전송 데이터 임계 값 도달 시 혼잡 회피 단계로 진행
  = 3. 혼잡 회피 (Congestion Avoidance) => 선형적 증가

13. 개발 환경 구축
- 1. 개발 프로젝트를 이해하고, 소프트웨어 및 하드웨어 장비를 구축하는 것
- 2. 하드웨어 환경
  = 1. 웹서버 (정적파일)
  = 2. 웹 어플리케이션 서버 (WAS) - 동적 서비스, Web Server & DB Server || Web Server & File Server
  = 3. DB Server - DB
  = 4. File Server - DB 에 저장 비효율, 서비스 제공 목적으로 유지하는 파일들을 저장

- 3. 소프트웨어 환경

