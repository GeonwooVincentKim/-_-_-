I. 응용 SW 기초 기술 활용

1. 운영체제
- 1. 컴퓨터의 시스템 자원들을 효율적으로 관리하며, 보다 편리하고 효율적으로 사용할 수 있도록 환경을 제공하는 여러 프로그램의 모임
- 2. 처리 능력, 반환 시간, 사용 가능도, 신뢰성
- 3. 프로세서 (기억장치), 입출력 장치, 파일 및 정보, 기억장치(주,보조 기억 장치 모두) 지원


2. 데이터베이스
- 1. DB
  = 1. 공동으로 사용될 데이터를 중복을 배제하고 통합하고, 저장장치 저장하여 항상 사용할 수 있도록 운영하는 운영 데이터
  = 2. 통합된 데이터, 저장된 데이터, 운영 데이터, 공용 데이터

- 2. DBMS
  = 1. 사용자의 요구에 따라 데이터를 생성해주고, DB 를 관리해주는 S/W
  = 2. 정의, 조작, 제어(무결성, 검사)

- 3. 독립성 = 논리적 독립성 & 물리적 독립성
- 4. 스키마
  = 1. DB 구조와 제약 조건에 관한 전반적인 명세를 기술한 것
  = 2. 외부 (논리적 구조 정의)
  = 3. 개념 (DB 전체적인 논리적 구조)
  = 4. 내부 (물리적 저장 장치)


3. DB 설계
- 1. 고려 사항
  = 무결성, 일관성, 회복, 보안, 효율성, DB 확장

- 2. DB 설계 순서
  = 요구 조건 분석, 개념적 설계, 논리적 설계, 물리적 설계, 구현

- 3. 요구 조건 분석
  = DB 를 사용할 사람들로부터 필요한 용도 파악

- 4. 개념적 설계 & 논리적 설계 & 물리적 설계
  = 1. 개념적 설계 - 현실 세계에 대한 추상적 개념을 표현하는 과정
  = 2. 논리적 설계 - 현실 세계에서 발생하는 자료를 특정 DBMS 가 지원하는 논리적 자료 구조로 변환 (Mapping) 하는 과정
  = 3. 물리적 설계 - 논리적 구조로 표현한 데이터를 물리적 구조의 데이터로 변환하는 과정, (파일 구조, 접근 경로, 조회 집중 Record)

- 5. DB 구현
  = 논리적 설계와 물리적 설계에서 도출된 DB 스키마를 파일로 구현하는 과정


4. ER (개체-관계) 모델
- 1. 현실 세계의 무질서한 데이터를 개념적인 논리 데이터로 표현하기 위한 방법
- 2. 개념, 관계, 속성


5. 관계형 DB 구조
- 1. 관계형 DB
  = 2차원적인 표를 이용해서 데이터 상호 관계를 정의하는 DB

- 2. Tuple
  = 1. Relation 을 구성하는 각각의 행
  = 2. Tuple 수 = 카디널리티 = 기수 = 대응 수

- 3. Attribute
  = 1. DB 를 구성하는 가장 작은 데이터 단위
  = 2. Attribute 수 = Degree (디그리) = 차수

- 4. Relation
  = 1. 전체 Table 의미, 데이터들을 표(Table) 형태로 표현한 것
  = 2. 순서 없음 (상관 없음)

- 5. Domain
  = 하나의 Attribute 가 취할 수 있는 같은 타입의 원자 (Atomic) 값들의 집합  

- 6. 관계형 데이터 모델
  = 2차원적인 표를 이용해서 데이터 상호 관계를 정의하는 DB 구조


6. 트랜잭션 (Transaction) & CRUD 분석
- 1. 트랜잭션 - 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 모두 수행되어야할 일련의 연산
- 2. Atomic (원자성), Consistency (일관성), Isolation (독립성), Durability (영속성)
  = 1. Atomic -> Transaction 연산 DB 에 모두 반영 (Commit) or 전혀 반영되지 않아야 함 (Rollback)
  = 2. Consistency -> Transaction 이 그 실행을 성공적으로 완료, 언제나 일관성 있는 DB 상태로 변환
  = 3. Isolation -> 둘 이상 Transaction 동시 병행 실행, 어느 하나의 Transaction 실행 중, 다른 Transaction 연산에 끼어들기 금지
  = 4. Durability -> 시스템 고장날 경우라도 영구적으로 성공된 Transaction 결과 반영

- 3. CRUD 분석 - Process 와 Table 간에 CRUD Matrix 를 만들어서 Transaction 을 분석하는 것
- 4. Transaction 분석 - DB 용량 산정 및 구조의 최적화 목적

